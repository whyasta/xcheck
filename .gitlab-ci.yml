image: docker

stages:
  - build
  - deploy

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  environment:
    name: dev
  tags:
    - bm-dev-kris
  before_script:
    - if [ "$CI_COMMIT_BRANCH" ==  "main" ]; then VERSION=$CI_COMMIT_BRANCH; else VERSION=$CI_COMMIT_TAG; fi;
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  only:
    refs:
      - tags
      - main
  script:
    - touch .env
    - echo "$ENV" >> .env
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination ${CI_REGISTRY_IMAGE}:$VERSION
      --cache=true
      --cache-ttl=720h

build_local:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  environment:
    name: dev
  tags:
    - bm-dev-kris
  before_script:
    - if [ "$CI_COMMIT_BRANCH" ==  "main" ]; then VERSION=$CI_COMMIT_BRANCH; else VERSION=$CI_COMMIT_TAG; fi;
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  only:
    refs:
      - tags
      - main
  script:
    - touch .env
    - echo "$ENV" >> .env
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination ${CI_REGISTRY_IMAGE}:$VERSION-local
      --cache=true
      --cache-ttl=720h

deploy_dev:
  stage: deploy
  environment:
    name: dev
  tags:
    - bm-dev-kris
  only:
    refs:
      - main
  script:
    - docker compose -f docker-compose.yml up -d
    - docker compose -f docker-compose-local.yml up -d
  #when: manual
  needs:
    - build
    - build_local

deploy_prod:
  stage: deploy
  environment:
    name: prod
  tags:
    - xx
  variables:
    VERSION: $CI_PIPELINE_IID
  only:
    refs:
      - main
      - tags
  script:
    - touch .env
    - echo "$ENV" >> .env
    - docker compose up -d --build
  when: manual

# cleanup:
#   stage: deploy
#   environment:
#     name: dev
#   tags:
#     - bm-dev-kris
#   script:
#     - docker rmi $(docker images -f "dangling=true" -q --no-trunc)
