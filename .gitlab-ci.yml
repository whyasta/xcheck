image: docker

variables:
  SERVICE_NAME: xcheck-api

stages:
  - build
  - deploy

build:
  stage: build
  environment:
    name: dev
  tags:
    - bm-dev-kris
  variables:
    VERSION: $CI_PIPELINE_IID
  only:
    refs:
      - main
  script:
    - touch .env
    - echo "$ENV" >> .env
    - docker docker build -t xcheck-api .

build_local:
  stage: build
  environment:
    name: dev
  tags:
    - bm-dev-kris
  variables:
    VERSION: $CI_PIPELINE_IID
  only:
    refs:
      - main
  script:
    - touch .env
    - echo "$ENV_LOCAL" >> .env
    - docker docker build -t xcheck-api-local .

deploy_dev:
  stage: deploy
  environment:
    name: dev
  tags:
    - bm-dev-kris
  variables:
    VERSION: $CI_PIPELINE_IID
  only:
    refs:
      - main
  script:
    - docker compose -f docker-compose.yml up -d
    - docker compose -f docker-compose-local.yml up -d

deploy_prod:
  stage: deploy
  environment:
    name: prod
  tags:
    - xx
  variables:
    VERSION: $CI_PIPELINE_IID
  only:
    refs:
      - main
      - tags
  script:
    - touch .env
    - echo "$ENV" >> .env
    - docker compose up -d --build
  when: manual

cleanup:
  stage: deploy
  environment:
    name: dev
  tags:
    - bm-dev-kris
  script:
    - docker rmi $(docker images -f "dangling=true" -q --no-trunc)
