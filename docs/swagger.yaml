definitions:
  models.UserLogin:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.UserRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 2
        type: string
      role_id:
        type: integer
      username:
        maxLength: 20
        minLength: 5
        type: string
    required:
    - email
    - password
    - role_id
    - username
    type: object
  models.UserRoleRequest:
    properties:
      description:
        type: string
      role_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/me:
    get:
      operationId: user-current
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - auth
  /auth/signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: User Login
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Signin
      tags:
      - auth
  /healthcheck:
    get:
      description: Healthcheck
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Healthcheck
      tags:
      - common
  /roles:
    get:
      operationId: role-get-all
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get All roles
      tags:
      - roles
    post:
      operationId: role-create
      parameters:
      - description: User Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.UserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Create role
      tags:
      - roles
  /roles/{id}:
    get:
      operationId: role-get-by-id
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get by ID
      tags:
      - roles
  /users:
    get:
      operationId: user-get-all
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get All users
      tags:
      - users
    post:
      operationId: user-create
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Create user
      tags:
      - users
  /users/{id}:
    get:
      operationId: user-get-by-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
